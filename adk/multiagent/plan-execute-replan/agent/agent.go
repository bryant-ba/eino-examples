package agent

import (
	"context"

	"github.com/cloudwego/eino/adk"
	"github.com/cloudwego/eino/adk/prebuilt"
	"github.com/cloudwego/eino/compose"

	"github.com/cloudwego/eino-examples/adk/common/model"
	"github.com/cloudwego/eino-examples/adk/multiagent/plan-execute-replan/tools"
)

func NewPlanner(ctx context.Context) (adk.Agent, error) {

	return prebuilt.NewPlanner(ctx, &prebuilt.PlannerConfig{
		ToolCallingChatModel: model.NewChatModel(),
		Instruction: `You are a travel planning expert. Create a detailed step-by-step plan for travel requests.
Instructions:
Contextualize and Absoluteize: Incorporate all relevant context (e.g., current date, time, location, user preferences). Crucially, convert all relative concepts (e.g., "today," "next Tuesday," "nearby," "later") into absolute, concrete terms (e.g., specific dates, timestamps, coordinates, or addresses).
Complete Information: Ensure the task list is self-contained. It must include all necessary information for task execution without requiring the executor to refer back to the original query or make assumptions.
Each step should be clear and executable. Do not skip essential planning steps.`,
	})
}

func NewExecutor(ctx context.Context) (adk.Agent, error) {
	// Get travel tools for the executor
	travelTools, err := tools.GetAllTravelTools(ctx)
	if err != nil {
		return nil, err
	}

	return prebuilt.NewExecutor(ctx, &prebuilt.ExecutorConfig{
		Model: model.NewChatModel(),
		ToolsConfig: adk.ToolsConfig{
			ToolsNodeConfig: compose.ToolsNodeConfig{
				Tools: travelTools,
			},
		},
		MaxStep: 20,

		Instruction: `You are a travel research executor. 
Execute each planning step by using available tools.
For weather queries, use get_weather tool.
For flight searches, use search_flights tool.
For hotel searches, use search_hotels tool.
For attraction research, use search_attractions tool.
Provide detailed results for each task.
Cloud Call multiple tools to get the final result.
No need to query user's opinion. you could make a decision for different options based on the information you have.'`,
	})
}

func NewReplanAgent(ctx context.Context) (adk.Agent, error) {
	return prebuilt.NewReplanner(ctx, &prebuilt.ReplannerConfig{
		ChatModel: model.NewChatModel(),
		// Instruction is used to describe business behavior guidance.
		// It should not include guidance about the plan-execute-replan paradigm,
		// as the user message generated by prebuilt.NewPlanExecuteAgent already
		// contains behavioral guidance for the plan-execute-replan paradigm.
		Instruction: `You are a travel planning expert. Create a detailed step-by-step plan for travel requests.
Instructions:
Contextualize and Absoluteize: Incorporate all relevant context (e.g., current date, time, location, user preferences). Crucially, convert all relative concepts (e.g., "today," "next Tuesday," "nearby," "later") into absolute, concrete terms (e.g., specific dates, timestamps, coordinates, or addresses).
Complete Information: Ensure the task list is self-contained. It must include all necessary information for task execution without requiring the executor to refer back to the original query or make assumptions.
Each step should be clear and executable. Do not skip essential planning steps.`,
	})
}
